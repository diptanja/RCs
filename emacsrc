;; .emacs

;;; uncomment this line to disable loading of "default.el" at startup
;; (setq inhibit-default-init t)

;; enable visual feedback on selections
;(setq transient-mark-mode t)

;; default to better frame titles
(setq create-lockfiles nil)
(setq frame-title-format
      (concat  "%b - emacs@" (system-name)))
(setq-default indent-tabs-mode nil
	      tab-width 4
	      c-basic-offset 4)

(require 'package)
(add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/"))
(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))

(setq package-enable-at-startup nil)
(package-initialize)

(add-to-list 'load-path "/apollo/env/EmacsAmazonLibs/share/emacs/site-lisp")
(require 'amz-common)

(require 'ensime)
(setq ensime-startup-snapshot-notification nil)

;; default to unified diffs
(setq diff-switches "-u")

(require 'web-mode)
(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))

(projectile-global-mode)

(defun cleanup-on-save ()
  (add-hook 'write-contents-functions
	    (lambda()
	      (save-excursion
		(delete-trailing-whitespace))))
    )

(setq scala-indent:align-parameters t)
(add-hook 'scala-mode-hook 'cleanup-on-save)
(add-hook 'scala-mode-hook 'ensime-mode)

(eval-after-load 'js-mode
  (add-hook 'js-mode-hook
	    (lambda()
	      (setq js-indent-level 2)
	      (setq tab-width 2)
	      (setq c-basic-offset 2)
	      (setq evil-shift-width 2)
	      (cleanup-on-save)
	      )))

;; ruby
(eval-after-load 'ruby-mode
  '(progn
     (setq-default ruby-indent-level 2)
     (setq-default evil-shift-width 2)
     (add-hook 'ruby-mode-hook
	       (lambda () (setq-default evil-shift-width ruby-indent-level)))
     (add-hook 'ruby-mode-hook
	       (lambda() (cleanup-on-save)))))

(setq auto-mode-alist (cons '("\\.rake\\'" . ruby-mode) auto-mode-alist))
(setq auto-mode-alist (cons '("Rakefile" . ruby-mode) auto-mode-alist))
(setq auto-mode-alist (cons '("Gemfile" . ruby-mode) auto-mode-alist))

(setq scroll-conservatively 5)
(setq scroll-margin 5)

;; Java stuff
(add-hook 'java-mode-hook 'ensime-mode)

(defvar java-src-dir "src/")
(defun java-src-stack-trace-regexp-to-filename ()
  "Generates a relative filename from java-stack-trace regexp match data."
  (concat java-src-dir
	  (replace-regexp-in-string "\\." "/" (match-string 1))
	  (match-string 2)))

(require 'compile)

;; regexps are not case sensitive so we jump through hoops to get this regex to match as expected
(add-to-list 'compilation-error-regexp-alist 'java-src-stack-trace)
(add-to-list 'compilation-error-regexp-alist-alist
	     '(java-src-stack-trace .
				    ("at \\(\\(?:[[:alnum:]]+\\.\\)+\\)+[[:alnum:]]+\\..+(\\([[:alnum:]]+\\.java\\):\\([[:digit:]]+\\))$"
				     java-src-stack-trace-regexp-to-filename 3)))

(defvar java-tst-dir "tst/")
(defun java-tst-stack-trace-regexp-to-filename ()
  "Generates a relative filename from java-stack-trace regexp match data."
  (concat java-tst-dir
	  (replace-regexp-in-string "\\." "/" (match-string 1))
	  (match-string 2)))

(add-to-list 'compilation-error-regexp-alist 'java-tst-stack-trace)
(add-to-list 'compilation-error-regexp-alist-alist
	     '(java-tst-stack-trace .
				    ("at \\(\\(?:[[:alnum:]]+\\.\\)+\\)+[[:alnum:]]+\\..+(\\([[:alnum:]]+\\Test.java\\):\\([[:digit:]]+\\))$"
				     java-tst-stack-trace-regexp-to-filename 3)))

(add-hook 'compilation-mode-hook (lambda () (visual-line-mode 1)))
(add-hook 'compilation-minor-mode-hook (lambda () (visual-line-mode 1)))

(setq blink-matching-paren nil)

;; always end a file with a newline
;(setq require-final-newline 'query)

;;; uncomment for CJK utf-8 support for non-Asian users
;; (require 'un-define)
(put 'upcase-region 'disabled nil)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ensime-auto-connect (quote always))
 '(ensime-typecheck-idle-interval 2)
 '(nav-width 40))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
